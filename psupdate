#!/usr/bin/env php
<?php
require(__DIR__ . "/inc/common.php");

try {
    psGet::init($argv);
    $args=PsGet::$args;
    $object=array_shift($args);
    psGet::readcfg(Array("global","update",$object));
    $args=PsGet::$args;
    array_shift($args);
    if (count($args)<2) {
        psOut::error("Error! Enter object[s] you want to update.\n".basename(__FILE__)
                . " resource id property=value [property=value]...\n"
                . "Use --help to get more informations\n"
                . "\n");
    }
    $objects=psCli::upobject($object);
    $objectid = array_shift($args);
    $update=psUpdate::create($args);
    if (!$update) {
        psOut::error("Bad update syntax? Run without parameters to get more help.");
    }
    $webService = new PrestaShopWebservice(psCli::$shop_url, psCli::$shop_key, false);
    $opt = array('resource' => $objects);
    psOut::progress("Getting data for $objects($object)...");
    $opt['id'] = $objectid;
    $xml = $webService->get($opt);
    $obj=$xml->children()->$object;
    $obj2=psUpdate::update($obj);
    $opt['putXml'] = $xml->asXML();
    if (psCli::$dry) {
        print_r($xml);
        psOut::msg("Dry mode. No modification made! See above if data are OK.\n");
    } else {
        $xml = $webService->edit($opt);
    }
} catch (PrestaShopWebserviceException $e) {
    // Here we are dealing with errors
    $trace = $e->getTrace();
    PsOut::error('Other error<br />' . $e->getMessage());
}


