#!/usr/bin/env php
<?php
require(__DIR__ . "/inc/common.php");
define("PSCMD","get");

try {
    psGet::init($argv);
    $args=PsGet::$args;
    $object=array_shift($args);
    psGet::readcfg(Array("global","get",$object));
    $args=PsGet::$args;
    array_shift($args);
    if (count($args)<1) {
        PsOut::error("Error! Enter object you want to get.\n".basename(__FILE__)
                . " resource id [property]...\n"
                . "Property '*' or empty properties means everything.\n"
                . "Use --help to see available resources\n"
                . "\n");
    }
    $objects=psCli::upobject($object);
    $objectid = array_shift($args);
    $properties = array_flip($args);
    if (sizeof($properties)==0) {
        psCli::$properties=Array("*" => 1);
    } else {
	psCli::$properties=$properties;
    }
    psCli::initApi();
    $opt = array('resource' => $objects);
    $opt['id'] = $objectid;
    psOut::progress("Getting data for $objects($object)...");
    $xml=psCli::apiCmd("get",$opt);
    psOut::begin($object);
    $rowdata=psGet::getValues($xml->children()->$object);
    if (array_key_exists("*",psCli::$properties)) {
	$rowdata2=$rowdata;
    } else {
    	$rowdata2=Array();
    	foreach (psCli::$properties as $p=>$v) {
		$rowdata2[$p]=$rowdata[$p];
    	}
    }
    psOut::write($rowdata2);
    psOut::end($object);
} catch (PrestaShopWebserviceException $e) {
    // Here we are dealing with errors
    $trace = $e->getTrace();
    PsOut::error('Other error<br />' . $e->getMessage());
}


