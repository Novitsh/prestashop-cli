#!/usr/bin/env php
<?php
require(__DIR__ . "/inc/common.php");

try {
    psGet::init($argv);
    $args=PsGet::$args;
    $object=array_shift($args);
    psGet::readcfg(Array("global","add",$object));
    $args=PsGet::$args;
    if (count($args)<1) {
        psOut::error("Error! Enter object you want to add.\n".basename(__FILE__)
                . " object property1=value [property2=value]...\n"
   		. "Do not forget to add all needed properties!\n"
                . "Use --help to get more informations\n"
                . "\n");
    }
    $objects=psCli::upobject($object);
    $objectid = array_shift($args);
    $add=psAdd::create($args);
    if (!$add) {
        psOut::error("Bad add syntax? Run without parameters to get more help.");
    }
    $webService = new PrestaShopWebservice(psCli::$shop_url, psCli::$shop_key, psCli::$debug);
    $xml = $webService->get(array('url' => psCli::$shop_url."/api/$objects?schema=blank"));
    psAdd::add($xml->children()->$object);
    $opt['resource'] = $objects;
    $opt['postXml'] = $xml->asXML();
    if (psCli::$debug) {
        psOut::msg($xml->asXML()."\n");
    }
    if (psCli::$dry) {
        psOut::msg("Dry mode. No modification made! See above if data are OK.\n");
    } else {
        $xml = $webService->add($opt);
    }
} catch (PrestaShopWebserviceException $e) {
    // Here we are dealing with errors
    $trace = $e->getTrace();
    PsOut::error('Other error<br />' . $e->getMessage());
}


